2025-07-03 06:47:27 debug: connection=default role=write duration=3 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 06:47:27 debug: connection=default role=write duration=1 rows=2 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 06:47:27 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 06:47:27 debug: connection=default role=write duration=18 rows=2 SELECT TABLE_NAME
            FROM INFORMATION_SCHEMA.TABLES
            WHERE TABLE_SCHEMA = 'dbo'
            AND (TABLE_TYPE = 'BASE TABLE' OR TABLE_TYPE = 'VIEW')
            ORDER BY TABLE_NAME
2025-07-03 06:47:27 debug: connection=default role=write duration=1 rows=8 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 06:47:27 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 06:47:27 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 06:47:27 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 06:47:27 debug: connection=default role=write duration=1 rows=2 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 06:47:27 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 06:52:59 debug: connection=default role=write duration=4 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 06:52:59 debug: connection=default role=write duration=2 rows=2 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 06:52:59 debug: connection=default role=write duration=2 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 06:52:59 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:52:59 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:53:38 debug: connection=default role=write duration=0 rows=0 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET temperature='2.50', humidity='3.00', current_reading='10', status='1', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('b1bd8d08-fb3e-498f-969a-4488bea0c7ca', '2', '2.50', '3.00', '10', '1', GETDATE())
2025-07-03 06:54:09 debug: connection=default role=write duration=38 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET temperature='2.50', humidity='3.00', current_reading='10', status='1', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('3393509b-b6dc-4182-aaa7-590a52fa75c3', '2', '2.50', '3.00', '10', '1', GETDATE());
2025-07-03 06:54:14 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:54:14 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:54:15 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:54:15 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:54:16 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:54:16 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:54:17 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:54:17 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:54:18 debug: connection=default role=write duration=2 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:54:18 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:54:18 debug: connection=default role=write duration=2 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:54:18 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:54:19 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:54:19 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:54:19 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:54:19 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:54:19 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:54:19 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:54:20 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:54:20 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:54:20 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:54:20 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:54:20 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:54:20 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:54:24 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:54:24 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:54:27 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:54:27 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:56:30 debug: connection=default role=write duration=0 rows=0 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET temperature='2.50', humidity='3.00', current_reading='10', status='1', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('45bf84fa-3d30-4b19-a281-39d0d8aab188', '2', '2.50', '3.00', '10', '1', GETDATE());
2025-07-03 06:56:37 debug: connection=default role=write duration=0 rows=0 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET temperature='2.50', humidity='3.00', current_reading='10', status='1', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('30296500-8a88-4864-8d29-d9c89458c1da', '2', '2.50', '3.00', '10', '1', GETDATE());
2025-07-03 06:56:45 debug: connection=default role=write duration=0 rows=0 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET temperature='2.50', humidity='3.00', current_reading='10', status='1', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('7ce6f12a-e61d-46ce-9277-fbbae7e5b131', '2', '2.50', '3.00', '10', '1', GETDATE());
2025-07-03 06:57:53 debug: connection=default role=write duration=54 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET temperature='2.50', humidity='3.00', current_reading='10', status='1', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('8f559bdf-f464-4e4d-aabf-3d65bcb0ee2a', '2', '2.50', '3.00', '10', '1', GETDATE());
2025-07-03 06:57:57 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 06:57:57 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 06:57:57 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 06:57:57 debug: connection=default role=write duration=3 rows=1 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:57:57 debug: connection=default role=write duration=2 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:58:47 debug: connection=default role=write duration=31 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET temperature='2.50', humidity='3.00', current_reading='10', status='2', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('cc7b6571-c7b0-4af0-96bb-57f944e05a31', '2', '2.50', '3.00', '10', '2', GETDATE());
2025-07-03 06:58:51 debug: connection=default role=write duration=1 rows=1 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:58:51 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:58:52 debug: connection=default role=write duration=1 rows=1 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:58:52 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:58:54 debug: connection=default role=write duration=1 rows=1 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:58:54 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:58:55 debug: connection=default role=write duration=1 rows=1 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:58:55 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:58:56 debug: connection=default role=write duration=1 rows=1 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:58:56 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:58:57 debug: connection=default role=write duration=1 rows=1 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:58:57 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:59:02 debug: connection=default role=write duration=38 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET temperature='2.50', humidity='3.00', current_reading='10', status='1', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('14fb4b12-0c0e-4e45-888a-f48da6436304', '2', '2.50', '3.00', '10', '1', GETDATE());
2025-07-03 06:59:05 debug: connection=default role=write duration=1 rows=1 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:59:05 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:59:06 debug: connection=default role=write duration=1 rows=1 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 06:59:06 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 06:59:41 debug: connection=default role=write duration=37 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET temperature='2.50', humidity='3.00', current_reading='10', status='1', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('9663a1de-2cc1-4191-b510-4fc0f467a3a3', '2', '2.50', '3.00', '10', '1', GETDATE());
2025-07-03 07:00:19 debug: connection=default role=write duration=42 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET temperature='2.50', humidity='3.00', current_reading='10', status='1', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('a83d7d01-ea75-46f2-a6ca-41794cec85f0', '2', '2.50', '3.00', '10', '1', GETDATE());
2025-07-03 07:01:10 debug: connection=default role=write duration=39 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET temperature='2.50', humidity='3.00', current_reading='10', status='0', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('659d2416-2083-4bd0-aa21-bf40c2af6db4', '2', '2.50', '3.00', '10', '0', GETDATE());
2025-07-03 07:01:17 debug: connection=default role=write duration=3 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 07:01:17 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 07:01:17 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 07:01:17 debug: connection=default role=write duration=1 rows=1 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:01:17 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 07:01:18 debug: connection=default role=write duration=1 rows=1 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:01:18 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 07:01:39 debug: connection=default role=write duration=76 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET temperature='3.50', humidity='3.00', current_reading='10', status='0', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('3ab801ac-3360-4537-b37b-2f7fe96f57b6', '2', '3.50', '3.00', '10', '0', GETDATE());
2025-07-03 07:01:42 debug: connection=default role=write duration=1 rows=1 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:01:42 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 07:02:18 debug: connection=default role=write duration=39 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET temperature='30', humidity='15.00', current_reading='17', status='0', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('3a85fb74-9c4c-4b91-8e7e-6f65714a5f28', '2', '30', '15.00', '17', '0', GETDATE());
2025-07-03 07:02:22 debug: connection=default role=write duration=1 rows=1 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:02:22 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 07:02:30 debug: connection=default role=write duration=39 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '1' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET temperature='30', humidity='15.00', current_reading='17', status='0', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('2689fb53-742d-4eb7-99e3-41a16bc599a0', '1', '30', '15.00', '17', '0', GETDATE());
2025-07-03 07:02:34 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:02:34 debug: connection=default role=write duration=2 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 07:02:46 debug: connection=default role=write duration=39 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '1' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('25c62625-91e7-4bf3-8d83-aa3b3f040f1b', '1', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:02:49 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:02:49 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 07:08:38 debug: connection=default role=write duration=47 rows=1 MERGE INTO live_data AS target 
            USING (SELECT '1' AS device_id) AS source 
            ON target.device_id = source.device_id 
            WHEN MATCHED THEN 
            UPDATE SET temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
            WHEN NOT MATCHED THEN 
            INSERT (device_id, temperature, humidity, current_reading, status, timestamp)
            VALUES ('1', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:08:38 debug: connection=default role=write duration=19 rows=1 SELECT TOP 1 uuid FROM live_data WHERE device_id = '1' ORDER BY timestamp DESC
2025-07-03 07:08:45 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 07:08:45 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 07:08:45 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 07:08:45 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:08:45 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 07:08:46 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:08:46 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 07:08:47 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:08:47 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 07:09:12 debug: connection=default role=write duration=39 rows=1 MERGE INTO live_data AS target 
            USING (SELECT '2' AS device_id) AS source 
            ON target.device_id = source.device_id 
            WHEN MATCHED THEN 
            UPDATE SET temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
            WHEN NOT MATCHED THEN 
            INSERT (device_id, temperature, humidity, current_reading, status, timestamp)
            VALUES ('2', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:09:12 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 uuid FROM live_data WHERE device_id = '2' ORDER BY timestamp DESC
2025-07-03 07:09:35 debug: connection=default role=write duration=39 rows=1 MERGE INTO live_data AS target 
            USING (SELECT '2' AS device_id) AS source 
            ON target.device_id = source.device_id 
            WHEN MATCHED THEN 
            UPDATE SET temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
            WHEN NOT MATCHED THEN 
            INSERT (device_id, temperature, humidity, current_reading, status, timestamp)
            VALUES ('2', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:09:35 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 uuid FROM live_data WHERE device_id = '2' ORDER BY timestamp DESC
2025-07-03 07:09:37 debug: connection=default role=write duration=38 rows=1 MERGE INTO live_data AS target 
            USING (SELECT '2' AS device_id) AS source 
            ON target.device_id = source.device_id 
            WHEN MATCHED THEN 
            UPDATE SET temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
            WHEN NOT MATCHED THEN 
            INSERT (device_id, temperature, humidity, current_reading, status, timestamp)
            VALUES ('2', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:09:37 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 uuid FROM live_data WHERE device_id = '2' ORDER BY timestamp DESC
2025-07-03 07:09:38 debug: connection=default role=write duration=38 rows=1 MERGE INTO live_data AS target 
            USING (SELECT '2' AS device_id) AS source 
            ON target.device_id = source.device_id 
            WHEN MATCHED THEN 
            UPDATE SET temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
            WHEN NOT MATCHED THEN 
            INSERT (device_id, temperature, humidity, current_reading, status, timestamp)
            VALUES ('2', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:09:38 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 uuid FROM live_data WHERE device_id = '2' ORDER BY timestamp DESC
2025-07-03 07:09:39 debug: connection=default role=write duration=38 rows=1 MERGE INTO live_data AS target 
            USING (SELECT '2' AS device_id) AS source 
            ON target.device_id = source.device_id 
            WHEN MATCHED THEN 
            UPDATE SET temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
            WHEN NOT MATCHED THEN 
            INSERT (device_id, temperature, humidity, current_reading, status, timestamp)
            VALUES ('2', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:09:39 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 uuid FROM live_data WHERE device_id = '2' ORDER BY timestamp DESC
2025-07-03 07:09:39 debug: connection=default role=write duration=4 rows=1 MERGE INTO live_data AS target 
            USING (SELECT '2' AS device_id) AS source 
            ON target.device_id = source.device_id 
            WHEN MATCHED THEN 
            UPDATE SET temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
            WHEN NOT MATCHED THEN 
            INSERT (device_id, temperature, humidity, current_reading, status, timestamp)
            VALUES ('2', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:09:39 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 uuid FROM live_data WHERE device_id = '2' ORDER BY timestamp DESC
2025-07-03 07:09:40 debug: connection=default role=write duration=53 rows=1 MERGE INTO live_data AS target 
            USING (SELECT '2' AS device_id) AS source 
            ON target.device_id = source.device_id 
            WHEN MATCHED THEN 
            UPDATE SET temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
            WHEN NOT MATCHED THEN 
            INSERT (device_id, temperature, humidity, current_reading, status, timestamp)
            VALUES ('2', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:09:40 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 uuid FROM live_data WHERE device_id = '2' ORDER BY timestamp DESC
2025-07-03 07:09:41 debug: connection=default role=write duration=38 rows=1 MERGE INTO live_data AS target 
            USING (SELECT '2' AS device_id) AS source 
            ON target.device_id = source.device_id 
            WHEN MATCHED THEN 
            UPDATE SET temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
            WHEN NOT MATCHED THEN 
            INSERT (device_id, temperature, humidity, current_reading, status, timestamp)
            VALUES ('2', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:09:41 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 uuid FROM live_data WHERE device_id = '2' ORDER BY timestamp DESC
2025-07-03 07:12:34 debug: connection=default role=write duration=56 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET uuid='5dc5e777-329d-4c9d-a8b1-415271e4b3b9', temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('5dc5e777-329d-4c9d-a8b1-415271e4b3b9', '2', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:12:41 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 07:12:41 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 07:12:41 debug: connection=default role=write duration=2 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 07:12:41 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:12:41 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 07:12:46 debug: connection=default role=write duration=39 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET uuid='f704378a-016b-48ca-9848-7269f0381a16', temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('f704378a-016b-48ca-9848-7269f0381a16', '2', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:12:49 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:12:49 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 07:12:58 debug: connection=default role=write duration=37 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET uuid='1448bc04-a8f4-4004-93ae-e7f2ddc2ff3c', temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('1448bc04-a8f4-4004-93ae-e7f2ddc2ff3c', '2', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:13:03 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:13:03 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 07:18:09 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 07:18:09 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 07:18:09 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 07:18:09 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:18:09 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 07:20:33 debug: connection=default role=write duration=2 rows=8 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 07:20:33 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 07:20:33 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 07:20:33 debug: connection=default role=write duration=7 rows=2 SELECT TABLE_NAME
            FROM INFORMATION_SCHEMA.TABLES
            WHERE TABLE_SCHEMA = 'dbo'
            AND (TABLE_TYPE = 'BASE TABLE' OR TABLE_TYPE = 'VIEW')
            ORDER BY TABLE_NAME
2025-07-03 07:20:33 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 07:20:33 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 07:20:33 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 07:20:33 debug: connection=default role=write duration=1 rows=8 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 07:20:33 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 07:20:33 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 07:38:15 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 07:38:15 debug: connection=default role=write duration=1 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 07:38:15 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 07:38:15 debug: connection=default role=write duration=6 rows=2 SELECT TABLE_NAME
            FROM INFORMATION_SCHEMA.TABLES
            WHERE TABLE_SCHEMA = 'dbo'
            AND (TABLE_TYPE = 'BASE TABLE' OR TABLE_TYPE = 'VIEW')
            ORDER BY TABLE_NAME
2025-07-03 07:38:15 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 07:38:15 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 07:38:15 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 07:38:24 debug: connection=default role=write duration=46 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 07:38:24 debug: connection=default role=write duration=1 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 07:38:24 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 07:38:39 debug: connection=default role=write duration=26 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET uuid='6eb80b59-612a-466d-ad2a-f91f5a41b0b6', temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('6eb80b59-612a-466d-ad2a-f91f5a41b0b6', '2', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:38:44 debug: connection=default role=write duration=3 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 07:38:44 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 07:38:44 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 07:38:44 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:38:44 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 07:44:15 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 07:44:15 debug: connection=default role=write duration=2 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 07:44:15 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 07:44:15 debug: connection=default role=write duration=6 rows=0 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:44:15 debug: connection=default role=write duration=4 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-03 07:44:28 debug: connection=default role=write duration=1 rows=0 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:44:28 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-03 07:48:51 debug: connection=default role=write duration=39 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET uuid='937a9f20-721a-4a18-9140-e1793a7ae9c4', temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('937a9f20-721a-4a18-9140-e1793a7ae9c4', '2', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:48:51 debug: connection=default role=write duration=6 rows=0 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '2' ORDER BY timestamp DESC
2025-07-03 07:48:51 debug: connection=default role=write duration=10 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                VALUES ('4b30074e-862b-48a4-b712-78c4fc173cc2', '2', '30', '17.00', '17', '0', GETDATE())
2025-07-03 07:51:47 debug: connection=default role=write duration=38 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '2' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET uuid='805a5217-4682-4c3d-b107-b75cd0da004d', temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('805a5217-4682-4c3d-b107-b75cd0da004d', '2', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:51:47 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '2' ORDER BY timestamp DESC
2025-07-03 07:51:53 debug: connection=default role=write duration=37 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '1' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET uuid='73217446-aef8-4d4f-a389-238df4d29237', temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('73217446-aef8-4d4f-a389-238df4d29237', '1', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:51:53 debug: connection=default role=write duration=1 rows=0 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '1' ORDER BY timestamp DESC
2025-07-03 07:51:53 debug: connection=default role=write duration=2 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                VALUES ('29581ad3-6f68-4bbb-a839-5ce37e2de853', '1', '30', '17.00', '17', '0', GETDATE())
2025-07-03 07:52:31 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 07:52:31 debug: connection=default role=write duration=2 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 07:52:31 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 07:52:31 debug: connection=default role=write duration=6 rows=2 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:52:31 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-03 07:52:34 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 07:52:34 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 07:52:34 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 07:52:34 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:52:34 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 07:53:23 debug: connection=default role=write duration=38 rows=1 MERGE INTO live_data AS target 
             USING (SELECT '1' AS device_id) AS source 
             ON target.device_id = source.device_id 
             WHEN MATCHED THEN 
               UPDATE SET uuid='e187afb3-23d8-4f78-92b9-d677b4d628d7', temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
             WHEN NOT MATCHED THEN 
               INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
               VALUES ('e187afb3-23d8-4f78-92b9-d677b4d628d7', '1', '30', '17.00', '17', '0', GETDATE());
2025-07-03 07:53:28 debug: connection=default role=write duration=1 rows=2 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 07:53:28 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 08:07:03 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 08:07:04 debug: connection=default role=write duration=53 rows=1 MERGE INTO live_data AS target 
                USING (SELECT '1' AS device_id) AS source 
                ON target.device_id = source.device_id 
                WHEN MATCHED THEN 
                UPDATE SET uuid='e0d42a06-f52d-4bbd-8cf8-ecef7f973acf', temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                WHEN NOT MATCHED THEN 
                INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                VALUES ('e0d42a06-f52d-4bbd-8cf8-ecef7f973acf', '1', '30', '17.00', '17', '0', GETDATE());
2025-07-03 08:07:04 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '1' ORDER BY timestamp DESC
2025-07-03 08:07:04 debug: connection=default role=write duration=3 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                    VALUES ('d38e16ef-0273-4c8f-9464-bd78c0542bae', '1', '30', '17.00', '17', '0', GETDATE())
2025-07-03 08:07:04 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 08:07:57 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 08:07:57 debug: connection=default role=write duration=2 rows=1 MERGE INTO live_data AS target 
                USING (SELECT '2' AS device_id) AS source 
                ON target.device_id = source.device_id 
                WHEN MATCHED THEN 
                UPDATE SET uuid='7f446969-3815-42c2-9597-fc35c00b9628', temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                WHEN NOT MATCHED THEN 
                INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                VALUES ('7f446969-3815-42c2-9597-fc35c00b9628', '2', '30', '17.00', '17', '0', GETDATE());
2025-07-03 08:07:57 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '2' ORDER BY timestamp DESC
2025-07-03 08:07:57 debug: connection=default role=write duration=1 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                    VALUES ('6a19f345-50e4-49f0-94cf-2da512cc5e5c', '2', '30', '17.00', '17', '0', GETDATE())
2025-07-03 08:07:57 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 08:08:34 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 08:08:35 debug: connection=default role=write duration=2 rows=1 MERGE INTO live_data AS target 
                USING (SELECT '2' AS device_id) AS source 
                ON target.device_id = source.device_id 
                WHEN MATCHED THEN 
                UPDATE SET uuid='a63e580a-07a5-4d79-b2e4-4253df96dd50', temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                WHEN NOT MATCHED THEN 
                INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                VALUES ('a63e580a-07a5-4d79-b2e4-4253df96dd50', '2', '30', '17.00', '17', '0', GETDATE());
2025-07-03 08:08:35 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '2' ORDER BY timestamp DESC
2025-07-03 08:08:35 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 08:13:13 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 08:13:13 debug: connection=default role=write duration=1 rows=1 MERGE INTO live_data AS target 
                USING (SELECT '3' AS device_id) AS source 
                ON target.device_id = source.device_id 
                WHEN MATCHED THEN 
                UPDATE SET uuid='c7341da3-a5a4-4efa-9d1a-906a230c561c', temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                WHEN NOT MATCHED THEN 
                INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                VALUES ('c7341da3-a5a4-4efa-9d1a-906a230c561c', '3', '30', '17.00', '17', '0', GETDATE());
2025-07-03 08:13:13 debug: connection=default role=write duration=1 rows=0 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '3' ORDER BY timestamp DESC
2025-07-03 08:13:13 debug: connection=default role=write duration=1 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                    VALUES ('dc61fdda-5fd7-40c0-97c3-485379440f59', '3', '30', '17.00', '17', '0', GETDATE())
2025-07-03 08:13:13 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 08:29:39 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 08:29:39 debug: connection=default role=write duration=2 rows=1 MERGE INTO live_data AS target 
                USING (SELECT '3' AS device_id) AS source 
                ON target.device_id = source.device_id 
                WHEN MATCHED THEN 
                UPDATE SET uuid='02799e5b-c5ba-49a6-8f5e-29fab243eadf', temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                WHEN NOT MATCHED THEN 
                INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                VALUES ('02799e5b-c5ba-49a6-8f5e-29fab243eadf', '3', '30', '17.00', '17', '0', GETDATE());
2025-07-03 08:29:39 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '3' ORDER BY timestamp DESC
2025-07-03 08:29:39 debug: connection=default role=write duration=1 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                    VALUES ('1ef93ffe-f04a-4400-8ffd-61a2bed38818', '3', '30', '17.00', '17', '0', GETDATE())
2025-07-03 08:29:39 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 08:29:55 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 08:29:55 debug: connection=default role=write duration=3 rows=1 MERGE INTO live_data AS target 
                USING (SELECT '3' AS device_id) AS source 
                ON target.device_id = source.device_id 
                WHEN MATCHED THEN 
                UPDATE SET uuid='79a70db6-238a-4466-8f88-9502ffb5f2c9', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                WHEN NOT MATCHED THEN 
                INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                VALUES ('79a70db6-238a-4466-8f88-9502ffb5f2c9', '3', '15', '17.00', '17', '0', GETDATE());
2025-07-03 08:29:55 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '3' ORDER BY timestamp DESC
2025-07-03 08:29:55 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 08:39:55 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 08:39:56 debug: connection=default role=write duration=1 rows=1 MERGE INTO live_data AS target 
                USING (SELECT '3' AS device_id) AS source 
                ON target.device_id = source.device_id 
                WHEN MATCHED THEN 
                UPDATE SET uuid='bdf3196e-bc6b-478c-a1af-689ed12a3a2c', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                WHEN NOT MATCHED THEN 
                INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                VALUES ('bdf3196e-bc6b-478c-a1af-689ed12a3a2c', '3', '15', '17.00', '17', '0', GETDATE());
2025-07-03 08:39:56 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '3' ORDER BY timestamp DESC
2025-07-03 08:39:56 debug: connection=default role=write duration=1 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                    VALUES ('a585d815-0790-4907-bb8b-ca7e7a7ab99a', '3', '15', '17.00', '17', '0', GETDATE())
2025-07-03 08:39:56 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 09:13:48 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 09:13:48 debug: connection=default role=write duration=1 rows=1 MERGE INTO live_data AS target 
                USING (SELECT '3' AS device_id) AS source 
                ON target.device_id = source.device_id 
                WHEN MATCHED THEN 
                UPDATE SET uuid='c46f8a0b-81c4-4c3f-a548-c23dab6b202b', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                WHEN NOT MATCHED THEN 
                INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                VALUES ('c46f8a0b-81c4-4c3f-a548-c23dab6b202b', '3', '15', '17.00', '17', '0', GETDATE());
2025-07-03 09:13:48 debug: connection=default role=write duration=0 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '3' ORDER BY timestamp DESC
2025-07-03 09:13:48 debug: connection=default role=write duration=0 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                    VALUES ('c46f8a0b-81c4-4c3f-a548-c23dab6b202b', '3', '15', '17.00', '17', '0', GETDATE())
2025-07-03 09:13:48 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 09:23:36 debug: connection=default role=write duration=1 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 09:23:36 debug: connection=default role=write duration=0 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 09:23:36 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 09:23:36 debug: connection=default role=write duration=5 rows=4 SELECT TABLE_NAME
            FROM INFORMATION_SCHEMA.TABLES
            WHERE TABLE_SCHEMA = 'dbo'
            AND (TABLE_TYPE = 'BASE TABLE' OR TABLE_TYPE = 'VIEW')
            ORDER BY TABLE_NAME
2025-07-03 09:23:36 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 09:23:36 debug: connection=default role=write duration=0 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 09:23:36 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 09:23:36 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 09:23:36 debug: connection=default role=write duration=0 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 09:23:36 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 09:23:36 debug: connection=default role=write duration=0 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 09:23:36 debug: connection=default role=write duration=0 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 09:23:36 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 09:23:36 debug: connection=default role=write duration=1 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 09:23:36 debug: connection=default role=write duration=0 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 09:23:36 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 09:27:42 debug: connection=default role=write duration=1 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 09:27:42 debug: connection=default role=write duration=0 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 09:27:42 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 09:27:42 debug: connection=default role=write duration=6 rows=3 SELECT TABLE_NAME
            FROM INFORMATION_SCHEMA.TABLES
            WHERE TABLE_SCHEMA = 'dbo'
            AND (TABLE_TYPE = 'BASE TABLE' OR TABLE_TYPE = 'VIEW')
            ORDER BY TABLE_NAME
2025-07-03 09:27:42 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 09:27:42 debug: connection=default role=write duration=0 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 09:27:42 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 09:27:42 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 09:27:42 debug: connection=default role=write duration=0 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 09:27:42 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 09:27:44 debug: connection=default role=write duration=1 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 09:27:44 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 09:27:44 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 09:28:41 debug: connection=default role=write duration=1 rows=0 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 09:31:03 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 09:31:03 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 09:31:03 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 09:31:03 debug: connection=default role=write duration=4 rows=4 SELECT TABLE_NAME
            FROM INFORMATION_SCHEMA.TABLES
            WHERE TABLE_SCHEMA = 'dbo'
            AND (TABLE_TYPE = 'BASE TABLE' OR TABLE_TYPE = 'VIEW')
            ORDER BY TABLE_NAME
2025-07-03 09:31:03 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 09:31:03 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 09:31:03 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 09:31:03 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 09:31:03 debug: connection=default role=write duration=0 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 09:31:03 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 09:31:03 debug: connection=default role=write duration=0 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 09:31:03 debug: connection=default role=write duration=0 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 09:31:03 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 09:31:03 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 09:31:03 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 09:31:03 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:00:52 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:00:52 debug: connection=default role=write duration=9 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '3' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='8ea81cce-75fd-47d0-82a4-ad68e1063971', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('8ea81cce-75fd-47d0-82a4-ad68e1063971', '3', '15', '17.00', '17', '0', GETDATE());
2025-07-03 10:00:52 debug: connection=default role=write duration=1 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:00:52 debug: connection=default role=write duration=0 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:00:52 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:00:52 debug: connection=default role=write duration=1 rows=0 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 3
2025-07-03 10:00:52 debug: connection=default role=write duration=0 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '3' ORDER BY timestamp DESC
2025-07-03 10:00:52 debug: connection=default role=write duration=1 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                     VALUES ('8ea81cce-75fd-47d0-82a4-ad68e1063971', '3', '15', '17.00', '17', '0', GETDATE())
2025-07-03 10:00:52 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 10:06:42 debug: connection=default role=write duration=2 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:06:42 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:06:42 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:06:42 debug: connection=default role=write duration=4 rows=0 SELECT TOP 1 ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE (device_id = 1 AND variable = 'temperature')
2025-07-03 10:06:42 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:06:42 debug: connection=default role=write duration=0 rows=0 INSERT INTO threshold_limits (variable, lower_limit, upper_limit) OUTPUT INSERTED.* VALUES ('temperature', 15, 35)
2025-07-03 10:06:42 debug: connection=default role= duration=0 rows=0 ROLLBACK
2025-07-03 10:09:04 debug: connection=default role=write duration=2 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:09:04 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:09:04 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:09:04 debug: connection=default role=write duration=1 rows=0 SELECT TOP 1 ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE (device_id = 1 AND variable = 'temperature')
2025-07-03 10:09:04 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:09:04 debug: connection=default role=write duration=0 rows=0 INSERT INTO threshold_limits (variable, lower_limit, upper_limit) OUTPUT INSERTED.* VALUES ('temperature', 15, 35)
2025-07-03 10:09:04 debug: connection=default role= duration=0 rows=0 ROLLBACK
2025-07-03 10:14:15 debug: connection=default role=write duration=2 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:14:15 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:14:15 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:14:15 debug: connection=default role=write duration=1 rows=0 SELECT TOP 1 ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE (device_id = 1 AND variable = 'temperature')
2025-07-03 10:14:15 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:14:15 debug: connection=default role=write duration=0 rows=0 INSERT INTO threshold_limits (variable, lower_limit, upper_limit) OUTPUT INSERTED.* VALUES ('temperature', 15, 35)
2025-07-03 10:14:15 debug: connection=default role= duration=0 rows=0 ROLLBACK
2025-07-03 10:18:23 debug: connection=default role=write duration=1 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:18:23 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:18:23 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:18:23 debug: connection=default role=write duration=1 rows=0 SELECT TOP 1 ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE (device_id = 1 AND variable = 'temperature')
2025-07-03 10:18:23 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:18:24 debug: connection=default role=write duration=0 rows=0 INSERT INTO threshold_limits (variable, lower_limit, upper_limit) OUTPUT INSERTED.* VALUES ('temperature', 15, 35)
2025-07-03 10:18:24 debug: connection=default role= duration=0 rows=0 ROLLBACK
2025-07-03 10:24:16 debug: connection=default role=write duration=2 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:24:16 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:24:16 debug: connection=default role=write duration=2 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:24:16 debug: connection=default role=write duration=1 rows=0 SELECT TOP 1 ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE (device_id = 1 AND variable = 'temperature')
2025-07-03 10:24:16 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:24:16 debug: connection=default role=write duration=0 rows=0 INSERT INTO threshold_limits (variable, lower_limit, upper_limit) OUTPUT INSERTED.* VALUES ('temperature', 15, 35)
2025-07-03 10:24:16 debug: connection=default role= duration=0 rows=0 ROLLBACK
2025-07-03 10:24:17 debug: connection=default role=write duration=1 rows=0 SELECT TOP 1 ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE (device_id = 1 AND variable = 'temperature')
2025-07-03 10:24:17 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:24:17 debug: connection=default role=write duration=0 rows=0 INSERT INTO threshold_limits (variable, lower_limit, upper_limit) OUTPUT INSERTED.* VALUES ('temperature', 15, 35)
2025-07-03 10:24:17 debug: connection=default role= duration=0 rows=0 ROLLBACK
2025-07-03 10:27:44 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:27:44 debug: connection=default role=write duration=1 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '3' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='20429db1-d2e9-4f9a-9ed4-519223bb97f4', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('20429db1-d2e9-4f9a-9ed4-519223bb97f4', '3', '15', '17.00', '17', '0', GETDATE());
2025-07-03 10:27:44 debug: connection=default role=write duration=1 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:27:44 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:27:44 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:27:44 debug: connection=default role=write duration=1 rows=0 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 3
2025-07-03 10:27:44 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '3' ORDER BY timestamp DESC
2025-07-03 10:27:44 debug: connection=default role=write duration=1 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                     VALUES ('20429db1-d2e9-4f9a-9ed4-519223bb97f4', '3', '15', '17.00', '17', '0', GETDATE())
2025-07-03 10:27:44 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 10:27:54 debug: connection=default role=write duration=3 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:27:54 debug: connection=default role=write duration=2 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:27:54 debug: connection=default role=write duration=2 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:27:54 debug: connection=default role=write duration=2 rows=10 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:27:54 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-03 10:28:03 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:28:03 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:28:03 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:28:03 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:28:03 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 10:28:11 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:28:11 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 10:28:27 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:28:27 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 10:28:34 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:28:34 debug: connection=default role=write duration=1 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '3' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='504904dc-d884-4a29-8ce0-2ba62cec1879', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('504904dc-d884-4a29-8ce0-2ba62cec1879', '3', '15', '17.00', '17', '0', GETDATE());
2025-07-03 10:28:34 debug: connection=default role=write duration=0 rows=0 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 3
2025-07-03 10:28:34 debug: connection=default role=write duration=0 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '3' ORDER BY timestamp DESC
2025-07-03 10:28:34 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 10:28:41 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:28:41 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 10:28:53 debug: connection=default role=write duration=1 rows=10 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:28:53 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-03 10:28:59 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:28:59 debug: connection=default role=write duration=2 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '3' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='265cba12-21ad-46ee-9491-6dcd202a519e', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('265cba12-21ad-46ee-9491-6dcd202a519e', '3', '15', '17.00', '17', '0', GETDATE());
2025-07-03 10:28:59 debug: connection=default role=write duration=1 rows=0 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 3
2025-07-03 10:28:59 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '3' ORDER BY timestamp DESC
2025-07-03 10:28:59 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 10:29:05 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:29:05 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 10:29:21 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:29:21 debug: connection=default role=write duration=2 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '3' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='4390ea21-5748-4cf1-85b0-3af6408c4aa3', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('4390ea21-5748-4cf1-85b0-3af6408c4aa3', '3', '15', '17.00', '17', '0', GETDATE());
2025-07-03 10:29:21 debug: connection=default role=write duration=1 rows=0 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 3
2025-07-03 10:29:21 debug: connection=default role=write duration=2 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '3' ORDER BY timestamp DESC
2025-07-03 10:29:21 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 10:29:58 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:29:58 debug: connection=default role=write duration=0 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '3' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='4f23cccc-c10c-4844-903d-55ec060e4f4a', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('4f23cccc-c10c-4844-903d-55ec060e4f4a', '3', '15', '17.00', '17', '0', GETDATE());
2025-07-03 10:29:58 debug: connection=default role=write duration=0 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:29:58 debug: connection=default role=write duration=0 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:29:58 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:29:58 debug: connection=default role=write duration=0 rows=0 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 3
2025-07-03 10:29:58 debug: connection=default role=write duration=0 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '3' ORDER BY timestamp DESC
2025-07-03 10:29:58 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 10:30:01 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:30:01 debug: connection=default role=write duration=2 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:30:01 debug: connection=default role=write duration=2 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:30:01 debug: connection=default role=write duration=1 rows=10 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:30:01 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-03 10:30:03 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:30:03 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 10:30:38 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:30:38 debug: connection=default role=write duration=0 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '3' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='7913ec0e-bc4b-4def-9fbe-398ce71dbe3d', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('7913ec0e-bc4b-4def-9fbe-398ce71dbe3d', '3', '15', '17.00', '17', '0', GETDATE());
2025-07-03 10:30:38 debug: connection=default role=write duration=0 rows=0 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 3
2025-07-03 10:30:38 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '3' ORDER BY timestamp DESC
2025-07-03 10:30:38 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 10:30:40 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:30:40 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:30:40 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:30:40 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:30:40 debug: connection=default role=write duration=2 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 10:30:53 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:30:53 debug: connection=default role=write duration=1 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '3' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='b7367e21-c2cf-4c72-b56b-1cecf97e948b', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('b7367e21-c2cf-4c72-b56b-1cecf97e948b', '3', '15', '17.00', '17', '0', GETDATE());
2025-07-03 10:30:53 debug: connection=default role=write duration=0 rows=0 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 3
2025-07-03 10:30:53 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '3' ORDER BY timestamp DESC
2025-07-03 10:30:53 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 10:30:54 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:30:54 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 10:30:59 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:30:59 debug: connection=default role=write duration=0 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '3' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='682e4678-f2c7-41f5-bebe-25f1d9e8524e', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('682e4678-f2c7-41f5-bebe-25f1d9e8524e', '3', '15', '17.00', '17', '0', GETDATE());
2025-07-03 10:30:59 debug: connection=default role=write duration=0 rows=0 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 3
2025-07-03 10:30:59 debug: connection=default role=write duration=0 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '3' ORDER BY timestamp DESC
2025-07-03 10:30:59 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 10:31:01 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:31:01 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 10:31:11 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:31:11 debug: connection=default role=write duration=1 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '2' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='d0c3a62c-c665-4fae-97a5-8efc305688f2', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('d0c3a62c-c665-4fae-97a5-8efc305688f2', '2', '15', '17.00', '17', '0', GETDATE());
2025-07-03 10:31:11 debug: connection=default role=write duration=1 rows=0 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 2
2025-07-03 10:31:11 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '2' ORDER BY timestamp DESC
2025-07-03 10:31:11 debug: connection=default role=write duration=1 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                     VALUES ('d0c3a62c-c665-4fae-97a5-8efc305688f2', '2', '15', '17.00', '17', '0', GETDATE())
2025-07-03 10:31:11 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 10:31:17 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:31:17 debug: connection=default role=write duration=2 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 10:31:24 debug: connection=default role=write duration=1 rows=11 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:31:24 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-03 10:31:34 debug: connection=default role=write duration=1 rows=11 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:31:34 debug: connection=default role=write duration=0 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-03 10:32:14 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:32:14 debug: connection=default role=write duration=1 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '2' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='6ab7cb3a-6df3-4fb7-90ff-4013a4a07bf4', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('6ab7cb3a-6df3-4fb7-90ff-4013a4a07bf4', '2', '15', '17.00', '17', '0', GETDATE());
2025-07-03 10:32:14 debug: connection=default role=write duration=1 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:32:14 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:32:14 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:32:14 debug: connection=default role=write duration=0 rows=0 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 2
2025-07-03 10:32:14 debug: connection=default role=write duration=0 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '2' ORDER BY timestamp DESC
2025-07-03 10:32:14 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 10:32:16 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:32:16 debug: connection=default role=write duration=2 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:32:16 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:32:16 debug: connection=default role=write duration=2 rows=11 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:32:16 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-03 10:32:19 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:32:19 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 10:32:21 debug: connection=default role=write duration=4 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY LiveData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:32:21 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 10:32:33 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:32:33 debug: connection=default role=write duration=1 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '1' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='27e899eb-d4cf-4efb-90a7-111ff6d66a83', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('27e899eb-d4cf-4efb-90a7-111ff6d66a83', '1', '15', '17.00', '17', '0', GETDATE());
2025-07-03 10:32:33 debug: connection=default role=write duration=0 rows=0 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 1
2025-07-03 10:32:33 debug: connection=default role=write duration=0 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '1' ORDER BY timestamp DESC
2025-07-03 10:32:33 debug: connection=default role=write duration=0 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                     VALUES ('27e899eb-d4cf-4efb-90a7-111ff6d66a83', '1', '15', '17.00', '17', '0', GETDATE())
2025-07-03 10:32:33 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 10:32:36 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY LiveData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:32:36 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 10:32:42 debug: connection=default role=write duration=2 rows=12 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:32:42 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-03 10:37:38 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:37:38 debug: connection=default role=write duration=1 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '1' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='ac82b09f-726d-4b2a-8773-44035606782f', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('ac82b09f-726d-4b2a-8773-44035606782f', '1', '15', '17.00', '17', '0', GETDATE());
2025-07-03 10:37:38 debug: connection=default role=write duration=1 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:37:38 debug: connection=default role=write duration=0 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:37:38 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:37:38 debug: connection=default role=write duration=0 rows=0 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 1
2025-07-03 10:37:38 debug: connection=default role=write duration=0 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '1' ORDER BY timestamp DESC
2025-07-03 10:37:38 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 10:37:43 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:37:43 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:37:43 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:37:43 debug: connection=default role=write duration=2 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY LiveData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 10:37:43 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 10:39:56 debug: connection=default role=write duration=2 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:39:56 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:39:56 debug: connection=default role=write duration=2 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:39:56 debug: connection=default role=write duration=1 rows=0 SELECT TOP 1 ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE (device_id = 1 AND variable = 'temperature')
2025-07-03 10:39:56 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:39:56 debug: connection=default role=write duration=0 rows=0 INSERT INTO threshold_limits (variable, lower_limit, upper_limit) OUTPUT INSERTED.* VALUES ('temperature', 15, 35)
2025-07-03 10:39:56 debug: connection=default role= duration=0 rows=0 ROLLBACK
2025-07-03 10:44:48 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 10:44:48 debug: connection=default role=write duration=1 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '1' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='d024c021-5466-447d-8976-2c9b78e0a56d', temperature='15', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('d024c021-5466-447d-8976-2c9b78e0a56d', '1', '15', '17.00', '17', '0', GETDATE());
2025-07-03 10:44:48 debug: connection=default role=write duration=1 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 10:44:48 debug: connection=default role=write duration=0 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 10:44:48 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 10:44:48 debug: connection=default role=write duration=0 rows=0 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 1
2025-07-03 10:44:48 debug: connection=default role=write duration=0 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '1' ORDER BY timestamp DESC
2025-07-03 10:44:48 debug: connection=default role=write duration=0 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                     VALUES ('d024c021-5466-447d-8976-2c9b78e0a56d', '1', '15', '17.00', '17', '0', GETDATE())
2025-07-03 10:44:48 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 11:07:53 debug: connection=default role=write duration=42 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 11:07:53 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 11:07:53 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 11:07:53 debug: connection=default role=write duration=2 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY LiveData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 11:07:53 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 11:07:55 debug: connection=default role=write duration=3 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 11:07:55 debug: connection=default role=write duration=2 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 11:07:55 debug: connection=default role=write duration=2 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 11:07:55 debug: connection=default role=write duration=2 rows=13 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 11:07:55 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-03 11:12:40 debug: connection=default role=write duration=1 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 11:12:40 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 11:12:40 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 11:12:40 debug: connection=default role=write duration=1 rows=0 SELECT TOP 1 ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE (device_id = 1 AND variable = 'temperature')
2025-07-03 11:12:40 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 11:12:40 debug: connection=default role=write duration=2 rows=0 SELECT TOP 1 1 AS existing FROM threshold_limits ThresholdLimits WHERE ThresholdLimits.device_id = 1
2025-07-03 11:12:40 debug: connection=default role=write duration=2 rows=1 INSERT INTO threshold_limits (device_id, variable, lower_limit, upper_limit) OUTPUT INSERTED.* VALUES (1, 'temperature', 15, 35)
2025-07-03 11:12:40 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 11:13:35 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 11:13:35 debug: connection=default role=write duration=2 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '1' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='228416a0-eec9-4bb7-bd8c-92902a880a46', temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('228416a0-eec9-4bb7-bd8c-92902a880a46', '1', '30', '17.00', '17', '0', GETDATE());
2025-07-03 11:13:35 debug: connection=default role=write duration=1 rows=1 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 1
2025-07-03 11:13:35 debug: connection=default role=write duration=2 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '1' ORDER BY timestamp DESC
2025-07-03 11:13:35 debug: connection=default role=write duration=1 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                     VALUES ('228416a0-eec9-4bb7-bd8c-92902a880a46', '1', '30', '17.00', '17', '0', GETDATE())
2025-07-03 11:13:35 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 11:19:10 debug: connection=default role=write duration=2 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 11:19:10 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 11:19:10 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 11:19:10 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE (device_id = 1 AND variable = 'temperature')
2025-07-03 11:19:10 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 11:19:10 debug: connection=default role=write duration=31 rows=1 UPDATE threshold_limits SET upper_limit = 45 WHERE device_id = 1
2025-07-03 11:19:10 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 11:21:29 debug: connection=default role=write duration=2 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 11:21:29 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 11:21:29 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 11:21:29 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE (device_id = 1 AND variable = 'temperature')
2025-07-03 11:21:29 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 11:21:29 debug: connection=default role=write duration=1 rows=1 UPDATE threshold_limits SET upper_limit = 30 WHERE device_id = 1
2025-07-03 11:21:29 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 11:37:47 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 11:37:47 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 11:37:47 debug: connection=default role=write duration=2 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 11:37:47 debug: connection=default role=write duration=4 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY LiveData.device_id asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 11:37:47 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 11:37:58 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY LiveData.device_id asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 11:37:58 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 11:38:04 debug: connection=default role=write duration=4 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY LiveData.temperature asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 11:38:04 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 11:38:06 debug: connection=default role=write duration=2 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY LiveData.humidity asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 11:38:06 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 11:38:11 debug: connection=default role=write duration=4 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY LiveData.current_reading asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 11:38:11 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 11:38:14 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY LiveData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 11:38:14 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 11:48:01 debug: connection=default role=write duration=3 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 11:48:01 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 11:48:01 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 11:48:01 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY LiveData.device_id asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 11:48:01 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 11:52:47 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 11:52:47 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 11:52:47 debug: connection=default role=write duration=2 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 11:52:47 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY LiveData.temperature asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 11:52:48 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 11:52:50 debug: connection=default role=write duration=3 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY LiveData.uuid asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 11:52:50 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 11:52:55 debug: connection=default role=write duration=2 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY LiveData.device_id asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 11:52:55 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-03 11:53:00 debug: connection=default role=write duration=3 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 11:53:00 debug: connection=default role=write duration=2 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 11:53:00 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 11:53:00 debug: connection=default role=write duration=5 rows=14 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.device_id asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 11:53:00 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-03 11:53:02 debug: connection=default role=write duration=1 rows=14 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 11:53:02 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-03 11:58:53 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 11:58:53 debug: connection=default role=write duration=2 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '1' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='5c4f365f-7a8f-4863-9226-a951ecd74ddd', temperature='30', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('5c4f365f-7a8f-4863-9226-a951ecd74ddd', '1', '30', '17.00', '17', '0', GETDATE());
2025-07-03 11:58:53 debug: connection=default role=write duration=1 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 11:58:53 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 11:58:53 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 11:58:53 debug: connection=default role=write duration=1 rows=1 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 1
2025-07-03 11:58:53 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '1' ORDER BY timestamp DESC
2025-07-03 11:58:53 debug: connection=default role=write duration=1 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                     VALUES ('5c4f365f-7a8f-4863-9226-a951ecd74ddd', '1', '30', '17.00', '17', '0', GETDATE())
2025-07-03 11:58:53 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 11:58:58 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE (device_id = 1 AND variable = 'temperature')
2025-07-03 11:58:58 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 11:58:58 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 11:59:19 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-03 11:59:19 debug: connection=default role=write duration=2 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '1' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='40d70c79-6d83-402e-8812-6517a0fd84d3', temperature='50', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('40d70c79-6d83-402e-8812-6517a0fd84d3', '1', '50', '17.00', '17', '0', GETDATE());
2025-07-03 11:59:19 debug: connection=default role=write duration=1 rows=1 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 1
2025-07-03 11:59:19 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 11:59:19 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 11:59:19 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 11:59:19 debug: connection=default role=write duration=7 rows=1 INSERT INTO critical_events (device_id, variable, value, threshold_type, threshold_value, uuid) OUTPUT INSERTED.* VALUES (1, 'temperature', 50, 'upper', 30, '4e5fc395-9eed-49b1-b6e1-1e2884218270')
2025-07-03 11:59:19 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '1' ORDER BY timestamp DESC
2025-07-03 11:59:19 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-03 12:15:42 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 12:15:42 debug: connection=default role=write duration=1 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 12:15:42 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 12:15:42 debug: connection=default role=write duration=1 rows=15 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 12:15:42 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-03 12:18:29 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-03 12:18:29 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-03 12:18:29 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-03 12:18:29 debug: connection=default role=write duration=4 rows=1 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-03 12:18:29 debug: connection=default role=write duration=4 rows=1 SELECT (COUNT(*)) AS count FROM critical_events CriticalEvents
2025-07-04 10:21:58 debug: connection=default role=write duration=153 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-04 10:21:58 debug: connection=default role=write duration=115 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-04 10:21:58 debug: connection=default role=write duration=105 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-04 10:21:58 debug: connection=default role=write duration=4 rows=15 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-04 10:21:58 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-04 10:21:59 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-04 10:21:59 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-04 10:21:59 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-04 10:21:59 debug: connection=default role=write duration=3 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY LiveData.device_id asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-04 10:21:59 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-04 10:22:01 debug: connection=default role=write duration=3 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-04 10:22:01 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-04 10:22:01 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-04 10:22:01 debug: connection=default role=write duration=6 rows=1 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-04 10:22:01 debug: connection=default role=write duration=2 rows=1 SELECT (COUNT(*)) AS count FROM critical_events CriticalEvents
2025-07-04 10:58:18 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-04 10:58:18 debug: connection=default role=write duration=2 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-04 10:58:18 debug: connection=default role=write duration=2 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-04 10:58:18 debug: connection=default role=write duration=5 rows=15 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.device_id asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-04 10:58:18 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-08 09:04:48 debug: connection=default role=write duration=226 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 09:04:48 debug: connection=default role=write duration=125 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 09:04:48 debug: connection=default role=write duration=125 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 09:04:48 debug: connection=default role=write duration=23 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 09:04:48 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-08 09:05:03 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 09:05:03 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-08 09:11:45 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-08 09:11:45 debug: connection=default role=write duration=6 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '1' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='34f234f8-b59f-439a-b407-5686aacfd82a', temperature='50', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('34f234f8-b59f-439a-b407-5686aacfd82a', '1', '50', '17.00', '17', '0', GETDATE());
2025-07-08 09:11:45 debug: connection=default role=write duration=1 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 09:11:45 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 09:11:45 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 09:11:45 debug: connection=default role=write duration=2 rows=1 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 1
2025-07-08 09:11:45 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 09:11:45 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 09:11:45 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 09:11:45 debug: connection=default role=write duration=2 rows=1 INSERT INTO critical_events (device_id, variable, value, threshold_type, threshold_value, uuid) OUTPUT INSERTED.* VALUES (1, 'temperature', 50, 'upper', 30, '8f3633ed-23b0-4ebf-a3ea-1868e75427ea')
2025-07-08 09:11:45 debug: connection=default role=write duration=7 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '1' ORDER BY timestamp DESC
2025-07-08 09:11:45 debug: connection=default role=write duration=2 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                     VALUES ('34f234f8-b59f-439a-b407-5686aacfd82a', '1', '50', '17.00', '17', '0', GETDATE())
2025-07-08 09:11:45 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-08 09:12:20 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-08 09:12:25 debug: connection=default role=write duration=1 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '1' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='83e61cac-c250-437b-8a8d-667426b0f02e', temperature='50', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('83e61cac-c250-437b-8a8d-667426b0f02e', '1', '50', '17.00', '17', '0', GETDATE());
2025-07-08 09:12:25 debug: connection=default role=write duration=0 rows=1 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 1
2025-07-08 09:12:25 debug: connection=default role=write duration=1 rows=1 INSERT INTO critical_events (device_id, variable, value, threshold_type, threshold_value, uuid) OUTPUT INSERTED.* VALUES (1, 'temperature', 50, 'upper', 30, '1d7afb24-a1ce-48fc-a65f-24637afaca07')
2025-07-08 09:12:25 debug: connection=default role=write duration=0 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '1' ORDER BY timestamp DESC
2025-07-08 09:12:25 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-08 09:13:01 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-08 09:13:08 debug: connection=default role=write duration=1 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '1' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='8243717d-956d-416c-b227-626ae7ca92f9', temperature='25', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('8243717d-956d-416c-b227-626ae7ca92f9', '1', '25', '17.00', '17', '0', GETDATE());
2025-07-08 09:13:08 debug: connection=default role=write duration=1 rows=1 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 1
2025-07-08 09:13:08 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '1' ORDER BY timestamp DESC
2025-07-08 09:13:08 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-08 09:15:11 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 09:15:11 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 09:15:11 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 09:15:11 debug: connection=default role=write duration=0 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 09:15:11 debug: connection=default role=write duration=0 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-08 09:15:28 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 09:15:28 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 09:15:28 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 09:15:28 debug: connection=default role=write duration=2 rows=3 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 09:15:28 debug: connection=default role=write duration=2 rows=1 SELECT (COUNT(*)) AS count FROM critical_events CriticalEvents
2025-07-08 09:19:07 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 09:19:07 debug: connection=default role=write duration=1 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 09:19:07 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 09:19:07 debug: connection=default role=write duration=3 rows=16 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.device_id asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 09:19:07 debug: connection=default role=write duration=2 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-08 09:19:13 debug: connection=default role=write duration=1 rows=16 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.device_id asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 09:19:13 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-08 09:19:25 debug: connection=default role=write duration=2 rows=16 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 09:19:25 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-08 10:57:34 debug: connection=default role=write duration=43 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 10:57:34 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 10:57:34 debug: connection=default role=write duration=2 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 10:57:34 debug: connection=default role=write duration=0 rows=0 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC, CriticalEvents.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 10:57:45 debug: connection=default role=write duration=0 rows=0 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC, CriticalEvents.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 10:57:51 debug: connection=default role=write duration=4 rows=3 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC, CriticalEvents.threshold_value asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 10:57:51 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM critical_events CriticalEvents
2025-07-08 10:58:12 debug: connection=default role=write duration=4 rows=3 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC, CriticalEvents.threshold_value asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 10:58:12 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM critical_events CriticalEvents
2025-07-08 10:58:22 debug: connection=default role=write duration=3 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 10:58:22 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 10:58:22 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 10:58:22 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 10:58:22 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-08 10:58:27 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 10:58:27 debug: connection=default role=write duration=2 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 10:58:27 debug: connection=default role=write duration=2 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 10:58:27 debug: connection=default role=write duration=2 rows=16 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 10:58:27 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-08 11:22:51 debug: connection=default role=write duration=41 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 11:22:51 debug: connection=default role=write duration=1 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 11:22:51 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 11:22:51 debug: connection=default role=write duration=1 rows=16 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:22:51 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-08 11:23:08 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-08 11:23:08 debug: connection=default role=write duration=0 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '1' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='b5e9d942-3730-4b58-8fc9-6d11034949d0', temperature='25', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('b5e9d942-3730-4b58-8fc9-6d11034949d0', '1', '25', '17.00', '17', '0', GETDATE());
2025-07-08 11:23:08 debug: connection=default role=write duration=1 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 11:23:08 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 11:23:08 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 11:23:08 debug: connection=default role=write duration=0 rows=1 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 1
2025-07-08 11:23:08 debug: connection=default role=write duration=0 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '1' ORDER BY timestamp DESC
2025-07-08 11:23:08 debug: connection=default role=write duration=0 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                     VALUES ('b5e9d942-3730-4b58-8fc9-6d11034949d0', '1', '25', '17.00', '17', '0', GETDATE())
2025-07-08 11:23:08 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-08 11:23:23 debug: connection=default role=write duration=1 rows=17 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:23:23 debug: connection=default role=write duration=0 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-08 11:23:43 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 11:23:43 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 11:23:43 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 11:23:43 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:23:43 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-08 11:23:53 debug: connection=default role=write duration=3 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 11:23:53 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 11:23:53 debug: connection=default role=write duration=2 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 11:23:53 debug: connection=default role=write duration=2 rows=3 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC, CriticalEvents.threshold_value asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:23:53 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM critical_events CriticalEvents
2025-07-08 11:24:11 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-08 11:24:12 debug: connection=default role=write duration=1 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '1' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='8d110362-a11d-41ca-95e6-dc7f1d73b051', temperature='50', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('8d110362-a11d-41ca-95e6-dc7f1d73b051', '1', '50', '17.00', '17', '0', GETDATE());
2025-07-08 11:24:12 debug: connection=default role=write duration=0 rows=1 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 1
2025-07-08 11:24:12 debug: connection=default role=write duration=1 rows=1 INSERT INTO critical_events (device_id, variable, value, threshold_type, threshold_value, uuid) OUTPUT INSERTED.* VALUES (1, 'temperature', 50, 'upper', 30, '15d0c4c5-561e-4ef1-99cc-9e892f5ae480')
2025-07-08 11:24:12 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '1' ORDER BY timestamp DESC
2025-07-08 11:24:12 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-08 11:24:26 debug: connection=default role=write duration=1 rows=4 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC, CriticalEvents.threshold_value asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:24:26 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM critical_events CriticalEvents
2025-07-08 11:24:42 debug: connection=default role=write duration=0 rows=0 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC, CriticalEvents.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:24:53 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:24:53 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-08 11:25:05 debug: connection=default role=write duration=0 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:25:05 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-08 11:25:13 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 11:25:13 debug: connection=default role=write duration=0 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 11:25:13 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 11:25:13 debug: connection=default role=write duration=0 rows=17 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:25:13 debug: connection=default role=write duration=0 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-08 11:25:41 debug: connection=default role=write duration=2 rows=4 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC, CriticalEvents.threshold_value asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:25:41 debug: connection=default role=write duration=2 rows=1 SELECT (COUNT(*)) AS count FROM critical_events CriticalEvents
2025-07-08 11:38:46 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-08 11:38:46 debug: connection=default role=write duration=1 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '1' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='308e7a9a-1a8e-4744-aa0f-60eb7b08a36e', temperature='50', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('308e7a9a-1a8e-4744-aa0f-60eb7b08a36e', '1', '50', '17.00', '17', '0', GETDATE());
2025-07-08 11:38:46 debug: connection=default role=write duration=1 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 11:38:46 debug: connection=default role=write duration=0 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 11:38:46 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 11:38:46 debug: connection=default role=write duration=1 rows=1 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 1
2025-07-08 11:38:46 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 11:38:46 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 11:38:46 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 11:38:46 debug: connection=default role=write duration=0 rows=1 INSERT INTO critical_events (device_id, variable, value, threshold_type, threshold_value, uuid) OUTPUT INSERTED.* VALUES (1, 'temperature', 50, 'upper', 30, '7e73748c-7516-45f9-9009-06618f95890c')
2025-07-08 11:38:46 debug: connection=default role=write duration=0 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '1' ORDER BY timestamp DESC
2025-07-08 11:38:46 debug: connection=default role=write duration=0 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                     VALUES ('308e7a9a-1a8e-4744-aa0f-60eb7b08a36e', '1', '50', '17.00', '17', '0', GETDATE())
2025-07-08 11:38:46 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-08 11:41:13 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 11:41:13 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 11:41:13 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 11:41:13 debug: connection=default role=write duration=1 rows=5 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC, CriticalEvents.threshold_value asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:41:13 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM critical_events CriticalEvents
2025-07-08 11:41:46 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 11:41:46 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 11:41:46 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 11:41:46 debug: connection=default role=write duration=0 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:41:46 debug: connection=default role=write duration=0 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-08 11:41:52 debug: connection=default role=write duration=1 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:41:52 debug: connection=default role=write duration=0 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-08 11:42:28 debug: connection=default role=write duration=0 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:42:28 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
2025-07-08 11:49:01 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 11:49:01 debug: connection=default role=write duration=1 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 11:49:01 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 11:49:01 debug: connection=default role=write duration=1 rows=18 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:49:01 debug: connection=default role=write duration=0 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-08 11:49:35 debug: connection=default role=write duration=2 rows=18 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:49:35 debug: connection=default role=write duration=0 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-08 11:50:00 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 11:50:00 debug: connection=default role=write duration=0 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 11:50:00 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 11:50:00 debug: connection=default role=write duration=0 rows=5 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 11:50:00 debug: connection=default role=write duration=0 rows=1 SELECT (COUNT(*)) AS count FROM critical_events CriticalEvents
2025-07-08 12:07:14 debug: connection=default role=write duration=44 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 12:07:14 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 12:07:14 debug: connection=default role=write duration=2 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 12:07:14 debug: connection=default role=write duration=0 rows=0 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC, CriticalEvents.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-08 12:34:58 debug: connection=default role= duration=0 rows=0 BEGIN
2025-07-08 12:35:04 debug: connection=default role=write duration=1 rows=1 MERGE INTO live_data AS target 
                 USING (SELECT '1' AS device_id) AS source 
                 ON target.device_id = source.device_id 
                 WHEN MATCHED THEN 
                   UPDATE SET uuid='caa9e84f-6eb9-4dfd-9bea-6e13d7111568', temperature='50', humidity='17.00', current_reading='17', status='0', timestamp=GETDATE()
                 WHEN NOT MATCHED THEN 
                   INSERT (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                   VALUES ('caa9e84f-6eb9-4dfd-9bea-6e13d7111568', '1', '50', '17.00', '17', '0', GETDATE());
2025-07-08 12:35:04 debug: connection=default role=write duration=1 rows=4 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 12:35:04 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'threshold_limits' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 12:35:04 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'threshold_limits' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 12:35:04 debug: connection=default role=write duration=1 rows=1 SELECT ThresholdLimits.device_id AS ThresholdLimits__device_id, ThresholdLimits.variable AS ThresholdLimits__variable, ThresholdLimits.lower_limit AS ThresholdLimits__lower_limit, ThresholdLimits.upper_limit AS ThresholdLimits__upper_limit FROM threshold_limits ThresholdLimits WHERE device_id = 1
2025-07-08 12:35:04 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-08 12:35:04 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-08 12:35:04 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-08 12:35:04 debug: connection=default role=write duration=1 rows=1 INSERT INTO critical_events (device_id, variable, value, threshold_type, threshold_value, uuid) OUTPUT INSERTED.* VALUES (1, 'temperature', 50, 'upper', 30, 'b8b5aaaf-1f78-4a54-b8b2-0f2e3b55fd0a')
2025-07-08 12:35:04 debug: connection=default role=write duration=1 rows=1 SELECT TOP 1 timestamp FROM ten_minute_data WHERE device_id = '1' ORDER BY timestamp DESC
2025-07-08 12:35:04 debug: connection=default role=write duration=0 rows=1 INSERT INTO ten_minute_data (uuid, device_id, temperature, humidity, current_reading, status, timestamp)
                     VALUES ('caa9e84f-6eb9-4dfd-9bea-6e13d7111568', '1', '50', '17.00', '17', '0', GETDATE())
2025-07-08 12:35:04 debug: connection=default role= duration=0 rows=0 COMMIT
2025-07-10 08:50:33 debug: connection=default role=write duration=115 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-10 08:50:33 debug: connection=default role=write duration=95 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-10 08:50:33 debug: connection=default role=write duration=99 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-10 08:50:33 debug: connection=default role=write duration=1 rows=6 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-10 08:50:33 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM critical_events CriticalEvents
2025-07-10 08:56:56 debug: connection=default role=write duration=1 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-10 08:56:56 debug: connection=default role=write duration=1 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-10 08:56:56 debug: connection=default role=write duration=0 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-10 08:56:56 debug: connection=default role=write duration=1 rows=6 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-10 08:56:56 debug: connection=default role=write duration=0 rows=1 SELECT (COUNT(*)) AS count FROM critical_events CriticalEvents
2025-07-11 08:01:02 debug: connection=default role=write duration=163 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-11 08:01:03 debug: connection=default role=write duration=136 rows=0 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'ten_minute_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-11 08:01:03 debug: connection=default role=write duration=135 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'ten_minute_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-11 08:01:03 debug: connection=default role=write duration=4 rows=19 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-11 08:01:03 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-11 08:01:49 debug: connection=default role=write duration=4 rows=19 SELECT TenMinuteData.uuid AS TenMinuteData__uuid, TenMinuteData.device_id AS TenMinuteData__device_id, TenMinuteData.temperature AS TenMinuteData__temperature, TenMinuteData.humidity AS TenMinuteData__humidity, TenMinuteData.current_reading AS TenMinuteData__current_reading, TenMinuteData.status AS TenMinuteData__status, TenMinuteData.timestamp AS TenMinuteData__timestamp FROM ten_minute_data TenMinuteData ORDER BY TenMinuteData.timestamp asc OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-11 08:01:49 debug: connection=default role=write duration=1 rows=1 SELECT (COUNT(*)) AS count FROM ten_minute_data TenMinuteData
2025-07-11 08:11:59 debug: connection=default role=write duration=2 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-11 08:11:59 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'critical_events' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-11 08:11:59 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'critical_events' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-11 08:11:59 debug: connection=default role=write duration=6 rows=6 SELECT CriticalEvents.uuid AS CriticalEvents__uuid, CriticalEvents.device_id AS CriticalEvents__device_id, CriticalEvents.variable AS CriticalEvents__variable, CriticalEvents.value AS CriticalEvents__value, CriticalEvents.threshold_type AS CriticalEvents__threshold_type, CriticalEvents.threshold_value AS CriticalEvents__threshold_value, CriticalEvents.timestamp AS CriticalEvents__timestamp FROM critical_events CriticalEvents ORDER BY timestamp DESC OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-11 08:11:59 debug: connection=default role=write duration=3 rows=1 SELECT (COUNT(*)) AS count FROM critical_events CriticalEvents
2025-07-11 08:15:48 debug: connection=default role=write duration=3 rows=7 SELECT DISTINCT
            AC.column_id AS [column_id],
            AC.name AS [name],
            TY.name AS [type],
            AC.max_length AS [char_length],
            AC.precision AS [precision],
            AC.scale AS [scale],
            AC.is_identity AS [autoincrement],
            AC.is_nullable AS [null],
            OBJECT_DEFINITION(AC.default_object_id) AS [default],
            AC.collation_name AS [collation_name]
            FROM sys.[objects] T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id]
            INNER JOIN sys.[types] TY ON TY.[user_type_id] = AC.[user_type_id]
            WHERE T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY column_id
2025-07-11 08:15:48 debug: connection=default role=write duration=2 rows=1 SELECT
                I.[name] AS [index_name],
                IC.[index_column_id] AS [index_order],
                AC.[name] AS [column_name],
                I.[is_unique], I.[is_primary_key],
                I.[is_unique_constraint]
            FROM sys.[tables] AS T
            INNER JOIN sys.[schemas] S ON S.[schema_id] = T.[schema_id]
            INNER JOIN sys.[indexes] I ON T.[object_id] = I.[object_id]
            INNER JOIN sys.[index_columns] IC ON I.[object_id] = IC.[object_id] AND I.[index_id] = IC.[index_id]
            INNER JOIN sys.[all_columns] AC ON T.[object_id] = AC.[object_id] AND IC.[column_id] = AC.[column_id]
            WHERE T.[is_ms_shipped] = 0 AND I.[type_desc] <> 'HEAP' AND T.[name] = 'live_data' AND S.[name] = 'dbo'
            ORDER BY I.[index_id], IC.[index_column_id]
2025-07-11 08:15:48 debug: connection=default role=write duration=1 rows=0 SELECT FK.[name] AS [foreign_key_name], FK.[delete_referential_action_desc] AS [delete_type],
                FK.[update_referential_action_desc] AS [update_type], C.name AS [column], RT.name AS [reference_table],
                RC.name AS [reference_column]
            FROM sys.foreign_keys FK
            INNER JOIN sys.foreign_key_columns FKC ON FKC.constraint_object_id = FK.object_id
            INNER JOIN sys.tables T ON T.object_id = FKC.parent_object_id
            INNER JOIN sys.tables RT ON RT.object_id = FKC.referenced_object_id
            INNER JOIN sys.schemas S ON S.schema_id = T.schema_id AND S.schema_id = RT.schema_id
            INNER JOIN sys.columns C ON C.column_id = FKC.parent_column_id AND C.object_id = FKC.parent_object_id
            INNER JOIN sys.columns RC ON RC.column_id = FKC.referenced_column_id AND RC.object_id = FKC.referenced_object_id
            WHERE FK.is_ms_shipped = 0 AND T.name = 'live_data' AND S.name = 'dbo'
            ORDER BY FKC.constraint_column_id
2025-07-11 08:15:48 debug: connection=default role=write duration=7 rows=3 SELECT LiveData.uuid AS LiveData__uuid, LiveData.device_id AS LiveData__device_id, LiveData.temperature AS LiveData__temperature, LiveData.humidity AS LiveData__humidity, LiveData.current_reading AS LiveData__current_reading, LiveData.status AS LiveData__status, LiveData.timestamp AS LiveData__timestamp FROM live_data LiveData ORDER BY (SELECT NULL) OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY
2025-07-11 08:15:48 debug: connection=default role=write duration=3 rows=1 SELECT (COUNT(*)) AS count FROM live_data LiveData
